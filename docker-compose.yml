# docker-compose.yml

version: "3.8"

services:
    db:
        image: postgres:15.2
        container_name: img_gal_db
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        restart: always
        ports:
            - "${DB_PORT}:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - img_gal_network
        healthcheck:
            test: ["CMD", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 5s
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: img_gal_backend
        depends_on:
            db:
                condition: service_healthy
        ports:
            - "${BACKEND_PORT}:8080"
        env_file:
            - .env
        environment:
            PORT: 8080
            DB_HOST: db
            DB_PORT: 5432
            DB_NAME: ${POSTGRES_DB}
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_MAX_OPEN_CONNS: 10
            DB_MAX_IDLE_CONNS: 5
            DB_CONN_MAX_LIFETIME: 60
            TO_EMAIL: ${TO_EMAIL}
        networks:
            - img_gal_network

volumes:
    postgres_data:
        driver: local

networks:
    img_gal_network:
        driver: bridge
